<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	   xmlns="http://www.springframework.org/schema/beans"
	   xmlns:context="http://www.springframework.org/schema/context"
	   xsi:schemaLocation="http://www.springframework.org/schema/beans
	   		http://www.springframework.org/schema/beans/spring-beans.xsd
	   		http://www.springframework.org/schema/context
	   		http://www.springframework.org/schema/context/spring-context.xsd">
	   		
	<!--队列 -->
	<bean id="queueDestination" class="org.apache.activemq.command.ActiveMQQueue">
		<constructor-arg>
			<value>default_queue,integral_queue</value>
		</constructor-arg>
	</bean>
	
	<!-- 真正可以产生Connection的ConnectionFactory，由ActiveMQ提供 -->
	<bean id="targetConnectionFactory" class="org.apache.activemq.ActiveMQConnectionFactory">
	   <!-- ActiveMQ服务地址 -->
	   <property name="brokerURL" value="failover:tcp://127.0.0.1:61616" />
	   <property name="userName" value="system"/>
	   <property name="password" value="manager"/>
	   <!-- 消息传输监听器，处理网络及服务器异常 -->
	   <property name="transportListener">
		  <bean class="com.bwf.p2p.activemq.ActiveMQTransportListener" />
	   </property>
	</bean>
	
	<!--
		ActiveMQ为我们提供了一个PooledConnectionFactory，通过往里面注入一个ActiveMQConnectionFactory
		可以用来将Connection、Session和MessageProducer池化，这样可以大大的减少我们的资源消耗。
		要依赖于 activemq-pool包
	 -->
	<bean id="pooledConnectionFactory" class="org.apache.activemq.pool.PooledConnectionFactory">
	   <property name="connectionFactory" ref="targetConnectionFactory" />
	   <property name="maxConnections" value="10" />
	</bean>
	
	<!-- Spring用于管理真正的ConnectionFactory的ConnectionFactory -->
	<bean id="jms_connectionFactory" class="org.springframework.jms.connection.SingleConnectionFactory">
	   <!-- 目标ConnectionFactory对应真实的可以产生JMS Connection的ConnectionFactory -->
	   <property name="targetConnectionFactory" ref="pooledConnectionFactory" />
	</bean>
	
	<!-- 队列模板,Spring提供的JMS工具类，它可以进行消息发送、接收等  -->
	<bean id="jmsTemplate" class="org.springframework.jms.core.JmsTemplate">
	   <!-- 这个connectionFactory对应的是我们定义的Spring提供的那个ConnectionFactory对象 -->
	   <property name="connectionFactory" ref="jms_connectionFactory"/>
	   <property name="defaultDestination" ref="queueDestination"/>
	</bean>
	
	<!-- <bean id="messageSender" class="com.bwf.p2p.activemq.MessageSender">
		<property name="jmsTemplate" ref="jmsTemplate"/>
	</bean> 已启用注解注入-->
	
	<!-- 消息监听器 -->
	<bean id="consumerMessageListener" class="com.bwf.p2p.activemq.ConsumerMessageListener" />

	<!-- 消息监听容器 -->
	<bean id="jmsContainer" class="org.springframework.jms.listener.DefaultMessageListenerContainer">
		<property name="connectionFactory" ref="jms_connectionFactory" />
		<property name="destination" ref="queueDestination" />
		<property name="messageListener" ref="consumerMessageListener" />
		<!-- 设置固定的线程数 -->
		<property name="concurrentConsumers" value="2"></property>
		<!-- 设置动态的线程数 -->
		<property name="concurrency" value="2-5"></property>
	</bean>
	
</beans>